name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  # packages: read
  # id-token: write  # (future) for provenance / npm publishing with OIDC

jobs:
  build-test-harness:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        node: [18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install (clean)
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type Check
        run: npm run typecheck

      - name: Build
        run: npm run build

      - name: Unit Tests
        run: npm test

      - name: Coverage (no fail)
        run: |
          npm run coverage || echo "coverage step failed (non-blocking)"

      - name: Verification Harness
        run: npm run harness

      - name: Smoke Script
        run: npm run smoke

      - name: Publish Dry-Run (core)
        run: npm publish --dry-run --workspace packages/core

      - name: Publish Dry-Run (cli)
        run: npm publish --dry-run --workspace packages/cli

  # Future real publish job (manual / tagged) sketch:
  # publish:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: build-test-harness
  #   permissions:
  #     contents: read
  #     id-token: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #         registry-url: 'https://registry.npmjs.org'
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  #     - run: npm ci
  #     - run: npm run build
  #     - run: npm publish --workspace packages/core
  #     - run: npm publish --workspace packages/cli
