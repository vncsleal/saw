name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  # packages: read
  # id-token: write  # (future) for provenance / npm publishing with OIDC

jobs:
  build-test-harness:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        node: [18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install (clean)
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type Check
        run: npm run typecheck

      - name: Build
        run: npm run build

      - name: Unit Tests
        run: npm test

      - name: Coverage (no fail)
        run: |
          npm run coverage || echo "coverage step failed (non-blocking)"
      - name: Pack (dry-run) saw
        run: npm pack --dry-run ./packages/cli

      - name: Publish Dry-Run (saw)
        run: npm publish --dry-run --workspace @vncsleal/saw

  publish:
    name: Publish (tagged release)
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-test-harness
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Publish saw
        run: npm publish --workspace packages/cli
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

